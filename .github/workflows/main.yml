# This is a basic workflow to help you get started with Actions

name: Create Runtime environment and Build Pack

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-tensorflow:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
  
      - name: Checkout tensorflow-build 
        uses: actions/checkout@v2
        with: 
          repository: MDK-Packs/tensorflow-pack
          path: tensorflow-pack
         
      - name: Checkout tflite-micro
        uses: actions/checkout@v2
        with: 
          repository: tensorflow/tflite-micro
          path: tensorflow
          clean: false  

      - name: Create Container runtime from DockerHub
        run : |
          docker run -i -v ${{ github.workspace }}:/workspace/host --mac-address="00:02:F7:FF:55:55" --name build_runtime -d armswdev/cmsis_tools_m55:latest 
          docker exec build_runtime pip3 install six requests pyyaml
          mkdir ${{ github.workspace }}/out/
      
           
      - name: Build TensorFlow Pack and run PackChk
        run : |
          docker exec build_runtime /bin/bash /workspace/host/tensorflow-pack/tensorflow-build/prep.sh
          docker exec build_runtime /bin/bash /workspace/host/tensorflow-pack/tensorflow-build/hotfix.sh
          docker exec build_runtime python3 /workspace/host/tensorflow-pack/tensorflow-build/generate_cmsis_pack.py  --tensorflow_path=/workspace/host/tensorflow --input_template=/workspace/host/tensorflow-pack/tensorflow-build/template/cmsis_pdsc.tpl  --srcs=/workspace/host/tensorflow-pack/tensorflow-build/srcs.lst --hdrs=/workspace/host/tensorflow-pack/tensorflow-build/hdrs.lst --hdrs-cmsis-nn=/workspace/host/tensorflow-pack/tensorflow-build/srcs.cmsis-nn.lst --srcs-cmsis-nn=/workspace/host/tensorflow-pack/tensorflow-build/hdrs.cmsis-nn.lst --hdrs-ethos=/workspace/host/tensorflow-pack/tensorflow-build/srcs.ethos.lst --srcs-ethos=/workspace/host/tensorflow-pack/tensorflow-build/hdrs.ethos.lst --testhdrs=/workspace/host/tensorflow-pack/tensorflow-build/srcs.test.lst --testsrcs=/workspace/host/tensorflow-pack/tensorflow-build/hdrs.test.lst --util_src=/workspace/host/tensorflow-pack/tensorflow-build/util_srcs.lst     
          cp ${{ github.workspace }}/tensorflow-pack/tensorflow-build/gen/*.pack ${{ github.workspace }}/out/

      - name: Build 3rd Party Packs and run PackChk
        run : |
          docker exec build_runtime python3 /workspace/host/tensorflow-pack/3rdparty-build/gen_pack.py --path=/workspace/host/tensorflow-pack/3rdparty-build/flatbuffers --date_tag
          cp ${{ github.workspace }}/tensorflow-pack/3rdparty-build/flatbuffers/build/*.pack ${{ github.workspace }}/out/
          docker exec build_runtime python3 /workspace/host/tensorflow-pack/3rdparty-build/gen_pack.py --path=/workspace/host/tensorflow-pack/3rdparty-build/ruy --date_tag
          cp ${{ github.workspace }}/tensorflow-pack/3rdparty-build/ruy/build/*.pack ${{ github.workspace }}/out/
          docker exec build_runtime python3 /workspace/host/tensorflow-pack/3rdparty-build/gen_pack.py --path=/workspace/host/tensorflow-pack/3rdparty-build/gemmlowp --date_tag
          cp ${{ github.workspace }}/tensorflow-pack/3rdparty-build/gemmlowp/build/*.pack ${{ github.workspace }}/out/
          # docker exec build_runtime python3 /workspace/host/tensorflow-pack/3rdparty-build/gen_pack.py --path=/workspace/host/tensorflow-pack/3rdparty-build/kissfft --date_tag
          # cp ${{ github.workspace }}/tensorflow-pack/3rdparty-build/kissfft/build/*.pack ${{ github.workspace }}/out/
          docker exec build_runtime python3 /workspace/host/tensorflow-pack/3rdparty-build/gen_pack.py --path=/workspace/host/tensorflow-pack/3rdparty-build/ethos-u-driver --date_tag
          cp ${{ github.workspace }}/tensorflow-pack/3rdparty-build/ethos-u-driver/build/*.pack ${{ github.workspace }}/out/
          docker exec build_runtime python3 /workspace/host/tensorflow-pack/3rdparty-build/gen_pack.py --path=/workspace/host/tensorflow-pack/3rdparty-build/tflite-er-profiler --date_tag
          cp ${{ github.workspace }}/tensorflow-pack/3rdparty-build/tflite-er-profiler/build/*.pack ${{ github.workspace }}/out/

      - name: Execute test suite
        run: echo "Run tests on Cortex-M55 FVP"
      
      - name: Upload Pack
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/out
        
        
