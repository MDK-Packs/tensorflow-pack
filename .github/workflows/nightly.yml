name: Nightly CI

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 * * *'

run-name: mlplatform.org nightly by @${{ github.actor }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-tensorflow:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
  
      - name: Checkout tensorflow-build 
        uses: actions/checkout@v4
        with: 
          repository: MDK-Packs/tensorflow-pack
          path: tensorflow-pack

      - name: Install tools
        run: |
          sudo apt install rsync
          pip3 install numpy pillow semantic-version six requests junit_xml pyyaml pygithub
          mkdir ${{ github.workspace }}/out/

      - name: Get history of releases from github
        run: 
          python3 ./tensorflow-pack/tensorflow-build/get_releases.py ${{ secrets.GITHUB_TOKEN }} > ./tensorflow-pack/tensorflow-build/history.txt

      - name: Run the pack build with the revision specified
        run : 
          ./tensorflow-pack/tensorflow-build/build_d.sh n$(date +'%y%m%d')

      #- name: Copy tensorflow-pack to out path
      #  run :  
      #    cp ${{ github.workspace }}/tensorflow-pack/tensorflow-build/gen/build/*.pack ${{ github.workspace }}/out/

      - name: Run the 3rdparty pack build with the revision specified
        run : |
          export PATH=$PATH:${{ github.workspace }}/tensorflow-pack/tensorflow-build/gen/utilities
          ./tensorflow-pack/3rdparty-build/build_d.sh n$(date +'%y%m%d')

      - name: Copy packs to out path
        run :  
          cp ${{ github.workspace }}/tensorflow-pack/out/*.pack ${{ github.workspace }}/out/
          
      - name: Get all generated PDSC files for artifact upload
        run :
          find ${{ github.workspace }}/tensorflow-pack/ -name '*.pdsc' -exec cp -prv '{}' '${{ github.workspace }}/out/' ';'

      - name: Upload Pack
        uses: actions/upload-artifact@v4
        with:
          name: tensorflow-pack-release
          path: ${{ github.workspace }}/out

      - name: Update nightly release
        uses: eine/tip@master
        with:
          tag: nightly
          rm: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ github.workspace }}/out/*.pack

